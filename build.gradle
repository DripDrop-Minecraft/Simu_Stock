import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow'
}

group = 'games.dripdrop'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        name = "minebench"
        url = "https://repo.minebench.de/"
    }
    maven {
        name = "tencent maven mirror"
        url = "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/"
    }
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT")
    compileOnly("com.github.MilkBowl:VaultAPI:1.7.1")

    implementation("org.xerial:sqlite-jdbc:3.46.0.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.google.code.gson:gson:2.9.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1")
    implementation("com.zaxxer:HikariCP:5.1.0")
    implementation("org.slf4j:slf4j-log4j12:2.0.13")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(ShadowJar).configureEach {
    relocate("org.slf4j", "games.dripdrop.lib.slf4j")
    relocate("com.zaxxer", "games.dripdrop.lib.hikaricp")
    relocate("kotlinx", "games.dripdrop.lib.kotlinx")
    relocate("kotlin", "games.dripdrop.lib.kotlin")
    relocate("org.intellij", "games.dripdrop.lib.org.intellij")
    relocate("org.jetbrains", "games.dripdrop.lib.org.jetbrains")
    relocate("com.google.gson", "games.dripdrop.lib.com.google.gson")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain(17)
}
